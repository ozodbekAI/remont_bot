from typing import List
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import date, timedelta

from database.engine import get_session
from services.services import SkillService, MasterService


# ==================== ADMIN KEYBOARDS ====================
def admin_main_kb() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞"""
    kb = [
        [KeyboardButton(text="üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")],
        [KeyboardButton(text="üìã –ó–∞—è–≤–∫–∏"), KeyboardButton(text="üë• –ú–∞—Å—Ç–µ—Ä–∞ –∏ –Ω–∞–≤—ã–∫–∏")],
        [KeyboardButton(text="üìä –û—Ç—á–µ—Ç—ã"), KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")]
    ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)


def filters_kb() -> InlineKeyboardMarkup:
    """–§–∏–ª—å—Ç—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –í—Å–µ", callback_data="filter_all"),
        InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–µ", callback_data="filter_new")
    )
    builder.row(
        InlineKeyboardButton(text="‚öôÔ∏è –í —Ä–∞–±–æ—Ç–µ", callback_data="filter_work"),
        InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤—ã–µ", callback_data="filter_done")
    )
    return builder.as_markup()


def masters_menu_kb() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞–º–∏"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìö –ù–∞–≤—ã–∫–∏", callback_data="list_skills"),
        InlineKeyboardButton(text="üë• –ú–∞—Å—Ç–µ—Ä–∞", callback_data="list_masters")
    )
    builder.row(
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–≤—ã–∫", callback_data="add_skill"),
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞", callback_data="add_master")
    )
    builder.row(
        InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞", callback_data="update_master"),
        InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞", callback_data="delete_master")
    )
    return builder.as_markup()


async def skills_checkbox_kb(selected_ids: List[int] = None) -> InlineKeyboardMarkup:
    """
    –ß–µ–∫–±–æ–∫—Å—ã –Ω–∞–≤—ã–∫–æ–≤ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è).
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏, –∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Å—Ç–µ—Ä–∞.
    """
    if selected_ids is None:
        selected_ids = []
    
    builder = InlineKeyboardBuilder()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞–≤—ã–∫–∏
    async with get_session() as session:
        skill_service = SkillService(session)
        skills = await skill_service.get_all_skills()
    
    for skill in skills:
        checkbox = "‚úÖ" if skill.id in selected_ids else "‚¨ú"
        builder.row(
            InlineKeyboardButton(
                text=f"{checkbox} {skill.name}",
                callback_data=f"skill_toggle_{skill.id}"
            )
        )
    
    builder.row(
        InlineKeyboardButton(text="üíæ –ì–æ—Ç–æ–≤–æ", callback_data="skills_done")
    )
    
    return builder.as_markup()


async def master_update_selection_kb() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    async with get_session() as session:
        from services.services import MasterService
        master_service = MasterService(session)
        masters = await master_service.get_all_with_skills()
    
    if not masters:
        return InlineKeyboardMarkup(inline_keyboard=[])
    
    for master in masters:
        builder.row(
            InlineKeyboardButton(
                text=f"{master.name} (ID: {master.telegram_id})",
                callback_data=f"select_update_{master.id}"
            )
        )
    
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="masters_cancel"))
    return builder.as_markup()


async def master_delete_selection_kb() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    async with get_session() as session:
        from services.services import MasterService
        master_service = MasterService(session)
        masters = await master_service.get_all_with_skills()
    
    if not masters:
        return InlineKeyboardMarkup(inline_keyboard=[])
    
    for master in masters:
        builder.row(
            InlineKeyboardButton(
                text=f"{master.name} (ID: {master.telegram_id})",
                callback_data=f"select_delete_{master.id}"
            )
        )
    
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="masters_cancel"))
    return builder.as_markup()


def master_update_menu_kb() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞, —á—Ç–æ –æ–±–Ω–æ–≤–∏—Ç—å —É –º–∞—Å—Ç–µ—Ä–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìù –ò–º—è", callback_data="update_name"))
    builder.row(InlineKeyboardButton(text="üìû –¢–µ–ª–µ—Ñ–æ–Ω", callback_data="update_phone"))
    builder.row(InlineKeyboardButton(text="üì± Telegram ID", callback_data="update_telegram"))
    builder.row(InlineKeyboardButton(text="üîß –ù–∞–≤—ã–∫–∏", callback_data="update_skills"))
    builder.row(InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="save_update"))
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="masters_cancel"))
    return builder.as_markup()


def master_delete_confirm_kb(master_id: int) -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_{master_id}"))
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="masters_cancel"))
    return builder.as_markup()


async def manual_master_selection_kb(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –º–∞—Å—Ç–µ—Ä–∞ (–ù–û–í–û–ï)"""
    builder = InlineKeyboardBuilder()
    
    async with get_session() as session:
        from services.services import MasterService
        master_service = MasterService(session)
        masters = await master_service.get_all_with_skills()
    
    if not masters:
        return InlineKeyboardMarkup(inline_keyboard=[])
    
    for master in masters:
        builder.row(
            InlineKeyboardButton(
                text=f"{master.name} (ID: {master.telegram_id})",
                callback_data=f"assign_manual_{master.id}_{order_id}"
            )
        )
    
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"cancel_manual_{order_id}"))
    return builder.as_markup()


# ==================== REPORTS KEYBOARDS ====================
def reports_menu_kb() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç—á–µ—Ç–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π", callback_data="report_financial"))
    builder.row(InlineKeyboardButton(text="üë• –ú–∞—Å—Ç–µ—Ä–∞", callback_data="report_masters"))
    builder.row(InlineKeyboardButton(text="üìã –ó–∞–∫–∞–∑—ã", callback_data="report_orders"))
    builder.row(InlineKeyboardButton(text="üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö", callback_data="export_all"))
    builder.row(InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main"))
    return builder.as_markup()


def period_selection_kb() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data="period_today"),
        InlineKeyboardButton(text="üìÜ –ù–µ–¥–µ–ª—è", callback_data="period_week")
    )
    builder.row(
        InlineKeyboardButton(text="üìÖ –ú–µ—Å—è—Ü", callback_data="period_month"),
        InlineKeyboardButton(text="üìä –í–µ—Å—å –ø–µ—Ä–∏–æ–¥", callback_data="period_all")
    )
    builder.row(
        InlineKeyboardButton(text="üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥", callback_data="period_custom")
    )
    builder.row(InlineKeyboardButton(text="üîô –ö –æ—Ç—á–µ—Ç–∞–º", callback_data="back_to_reports"))
    return builder.as_markup()


# ==================== MASTER KEYBOARDS ====================
def master_main_kb() -> ReplyKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞—Å—Ç–µ—Ä–∞"""
    kb = [
        [KeyboardButton(text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏")],
        [KeyboardButton(text="üìÖ –ì—Ä–∞—Ñ–∏–∫"), KeyboardButton(text="üí¨ –ê–¥–º–∏–Ω—É")]
    ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)


def order_status_kb(order_id: int) -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º –∑–∞—è–≤–∫–∏ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚úÖ –ë–µ—Ä—É!", callback_data=f"confirm_{order_id}"),
        InlineKeyboardButton(text="üöó –í—ã–µ—Ö–∞–ª", callback_data=f"depart_{order_id}")
    )
    builder.row(
        InlineKeyboardButton(text="üè† –ü—Ä–∏–±—ã–ª", callback_data=f"arrive_{order_id}"),
        InlineKeyboardButton(text="üõ†Ô∏è –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"complete_{order_id}")
    )
    builder.row(
        InlineKeyboardButton(text="‚ùå –û—Ç–∫–∞–∑", callback_data=f"reject_{order_id}")
    )
    return builder.as_markup()


def master_orders_kb(has_active: bool = False) -> InlineKeyboardMarkup:
    """–§–∏–ª—å—Ç—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ –º–∞—Å—Ç–µ—Ä–∞"""
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üìã –ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data="master_orders_active"),
        InlineKeyboardButton(text="‚úÖ –ê—Ä—Ö–∏–≤", callback_data="master_orders_archive")
    )
    return builder.as_markup()